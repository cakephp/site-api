server {
    listen      [::]:80;
    listen      80;
    server_name api.cakephp.org api4.cakephp.org www.api.cakephp.org;

    access_log /var/log/nginx/api.cakephp.org-access.log;
    error_log /var/log/nginx/api.cakephp.org-error.log;

    include {{ $.DOKKU_ROOT }}/{{ $.APP }}/nginx.conf.d/*.conf;
    location / {
        return 302 https://api.cakephp.org$request_uri;
    }
}

server {
    listen      [::]:443 ssl http2;
    listen      443 ssl http2;
    server_name api.cakephp.org;
    access_log  /var/log/nginx/api.cakephp.org-access.log;
    error_log   /var/log/nginx/api.cakephp.org-error.log;
    index       index.html index.htm;

    ssl_certificate           {{ $.APP_SSL_PATH }}/server.crt;
    ssl_certificate_key       {{ $.APP_SSL_PATH }}/server.key;
    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;

    include {{ $.DOKKU_ROOT }}/{{ $.APP }}/nginx.conf.d/*.conf;

    set $cake3_latest "3.10";
    set $cake4_latest "4.3";
    set $chronos_latest "2.x";
    set $elastic_search_latest "3.x";
    set $queue_latest "0.x";

    location ~ /\.ht {
        deny all;
    }

    if ($http_user_agent ~ "HTTrack") {
        return 499;
    }

    location ~ ^/(cache)?_?css/ {
        gzip_vary on;
    }

    location ~ ^/(cache)?_?js/ {
        gzip_vary on;
    }

    location ~ ^/img/ {
        gzip_vary on;
    }

    location ~ ^/fonts/ {
        gzip_vary on;
    }

    location ~ ^/$ {
        rewrite ^ /${cake4_latest}/ permanent;
    }

    # Add trailing slashes.
    location ~ ^/(\d+\.\d+)$ {
        rewrite ^/(\d+\.\d+)$ /$1/ redirect;
    }
    location ~ ^/chronos/(\d\.\d+)$ {
        rewrite ^/chronos/(\d\.\d+)$ /chronos/$1/ redirect;
    }
    location ~ ^/chronos/(\d\.x)$ {
        rewrite ^/chronos/(\d\.x)$ /chronos/$1/ redirect;
    }
    location ~ ^/elastic-search/(\d\.x)$ {
        rewrite ^/elastic-search/(\d\.x)$ /elastic-search/$1/ redirect;
    }
    location ~ ^/queue/(\d\.x)$ {
        rewrite ^/queue/(\d\.x)$ /queue/$1/ redirect;
    }

    # Define latest aliases
    location ~ ^/2\.(x|latest)/?(.*)$ {
        return 303 https://api.cakephp.org/2.10/$2;
    }
    location ~ ^/3\.(x|latest)/?(.*)$ {
        return 303 https://api.cakephp.org/${cake3_latest}/$2;
    }
    location ~ ^/4\.(x|latest)/?(.*)$ {
        return 303 https://api.cakephp.org/${cake4_latest}/$2;
    }
    location ~ ^/chronos/?$ {
        return 303 https://api.cakephp.org/chronos/${chronos_latest}/;
    }
    location ~ ^/elastic-search/?$ {
        return 303 https://api.cakephp.org/elastic-search/${elastic_search_latest}/;
    }
    location ~ ^/queue/?$ {
        return 303 https://api.cakephp.org/queue/${queue_latest}/;
    }

    # Forwarding for different versions
    # This block has to be before the other 3.x versions so that 3.10 isn't
    # matched as 3.1
    location ~ ^/4.next/?(.*)$ {
        proxy_set_header Host "api-4.cakephp.org";
        proxy_pass http://localhost:80/cakephp/4.next/$1;
    }
    location ~ ^/(3\.\d+|4\.\d+)/?(.*)$ {
        proxy_set_header Host "api-4.cakephp.org";
        proxy_pass http://localhost:80/cakephp/$1/$2;
    }

    location ~ ^/(1\.2|1\.3|2\.[0-9]+)/?(.*)$ {
        proxy_set_header Host "api-3.cakephp.org";
        proxy_pass http://localhost:80/$1/$2;
    }
    location ~ ^/resources/(.*)$ {
        proxy_set_header Host "api-3.cakephp.org";
        proxy_pass http://localhost:80/resources/$1;
    }

    # Chronos API docs 1.x compatibility handling
    location ~ ^/chronos/(1\.0|1\.1|1\.2|1\.3)/?(.*)$ {
        proxy_set_header Host "api-4.cakephp.org";
        proxy_pass http://localhost:80/chronos/1.x/$2;
    }
    # Chronos API docs 1.x and 2.x versions
    location ~ ^/chronos/([12]\.x)/?(.*)$ {
        proxy_set_header Host "api-4.cakephp.org";
        proxy_pass http://localhost:80/chronos/$1/$2;
    }
    # elastic-search API docs 2.x, 3.x versions
    location ~ ^/elastic-search/([23]\.x)/?(.*)$ {
        proxy_set_header Host "api-4.cakephp.org";
        proxy_pass http://localhost:80/elastic-search/$1/$2;
    }
    # queue
    location ~ ^/queue/([0]\.x)/?(.*)$ {
        proxy_set_header Host "api-4.cakephp.org";
        proxy_pass http://localhost:80/queue/$1/$2;
    }

    # Favicon
    location ~ ^/favicon.png {
        rewrite ^ /4.0/favicon.png permanent;
    }
}
